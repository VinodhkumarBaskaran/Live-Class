{
  "nodes": [
    {
      "parameters": {},
      "id": "24f634b3-13b2-49c9-8707-ccc7eccd32d0",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2560,
        144
      ]
    },
    {
      "parameters": {
        "path": "657bd536-0d24-4e5e-a96c-1454f6784871",
        "options": {}
      },
      "id": "45efc9fb-ac52-4be7-93e9-88590a51d6c3",
      "name": "Form Trigger",
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 1,
      "position": [
        -2320,
        144
      ],
      "webhookId": "657bd536-0d24-4e5e-a96c-1454f6784871"
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "id": "55a261d4-7848-4e77-8347-f540b1367f1a",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1,
      "position": [
        -2096,
        144
      ],
      "webhookId": "f725c920-d226-4352-9cd8-4795e8d4f223"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "095a488f-fd09-4799-9a0f-4ee2a3607c57",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        -2560,
        352
      ]
    },
    {
      "parameters": {
        "path": "77b4cd57-43e5-497f-89f9-ff9f98419bc8",
        "options": {}
      },
      "id": "513e6c8a-0d04-4d68-a5ed-905d15040bea",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -2320,
        352
      ],
      "webhookId": "77b4cd57-43e5-497f-89f9-ff9f98419bc8"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "id": "f77d79f6-6c21-42b5-a9b9-0c19a8b98b83",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        -2096,
        352
      ]
    },
    {
      "parameters": {},
      "id": "eeaa28e0-da56-4494-8972-dfbfbd183d78",
      "name": "Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -2320,
        560
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "baseId": {
          "__rl": true,
          "mode": "url",
          "value": ""
        },
        "tableId": {
          "__rl": true,
          "mode": "url",
          "value": ""
        },
        "additionalFields": {}
      },
      "id": "26752c83-8456-48de-af75-399d3917f72c",
      "name": "Airtable Trigger",
      "type": "n8n-nodes-base.airtableTrigger",
      "typeVersion": 1,
      "position": [
        -2096,
        560
      ]
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "id": "4b886993-b8fd-482f-aa89-09e1c68044f2",
      "name": "Get Gmail Message",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        -1680,
        160
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1690f944-7e9e-46fe-b237-255c1d64c4da",
      "name": "Search Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [
        -1456,
        544
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ecc1a21d-7635-41d6-a1ce-de23daf3e432",
      "name": "Create Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [
        -1680,
        544
      ]
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "id": "6c6e3742-e4a8-4b8a-8283-c75fa1a3eafd",
      "name": "Send Gmail Message",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        -1248,
        160
      ]
    },
    {
      "parameters": {
        "pageId": {
          "__rl": true,
          "mode": "url",
          "value": ""
        },
        "options": {}
      },
      "id": "015417e9-9985-43ea-aab9-f18fc5c75788",
      "name": "Upsert Record",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        -1456,
        352
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c6b91078-fafb-44fc-af32-bdacce01d104",
      "name": "Update Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [
        -1248,
        544
      ]
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "id": "dcc66583-af83-448e-9edc-394a42578cf3",
      "name": "Add Gmail Label",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        -1456,
        160
      ]
    },
    {
      "parameters": {
        "pageId": {
          "__rl": true,
          "mode": "url",
          "value": ""
        },
        "options": {}
      },
      "id": "d99b6db0-b017-482a-9874-1719c6cc0750",
      "name": "Delete Notion Record",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        -1680,
        352
      ]
    },
    {
      "parameters": {},
      "id": "aeae447d-98a1-43b2-9679-0393b4d07163",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        -608,
        160
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b41ec640-15d6-41ac-9c68-2c78e99ab415",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 1,
      "position": [
        -816,
        160
      ]
    },
    {
      "parameters": {},
      "id": "cf6bea70-a460-43ca-8d8c-8732b7f3d547",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        -400,
        160
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "1794337a-bdd0-4e96-b359-f0413f6c5aff",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -816,
        368
      ]
    },
    {
      "parameters": {},
      "id": "3ea80c07-adcc-4bca-839a-1dfe492e7ee9",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -608,
        368
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9a3e1415-1605-4579-8d99-46bc4e3922da",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -384,
        368
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "779c4c1f-9600-4798-a019-b813852a0a71",
      "name": "Set Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -816,
        544
      ]
    },
    {
      "parameters": {},
      "id": "0f7e87c3-8e2e-433a-bf9d-b77ae102c817",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -608,
        528
      ]
    },
    {
      "parameters": {},
      "id": "494553ac-c83f-446f-b64e-3ef38649623f",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        80,
        160
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "68ee6ce0-0d55-42be-96d3-ae7c3a8400a9",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        80,
        352
      ]
    },
    {
      "parameters": {
        "path": "e1880ddd-8d84-45fe-ac2a-08238730a68a",
        "options": {}
      },
      "id": "df9f32f4-72e6-4537-b047-6b9dba34ffa7",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        80,
        544
      ],
      "webhookId": "e1880ddd-8d84-45fe-ac2a-08238730a68a"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -2560,
        544
      ],
      "id": "7ea61122-35a3-406c-8a68-2e3a6ccc8c09",
      "name": "When chat message received",
      "webhookId": "0f9aef3c-0b93-4b82-8b22-39f1f0cf9b41"
    },
    {
      "parameters": {
        "resource": "block",
        "operation": "getAll",
        "blockId": {
          "__rl": true,
          "mode": "url",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        -1248,
        352
      ],
      "id": "7fc9d02f-1061-4ef6-abf0-81adc5ce2066",
      "name": "Get many child blocks"
    },
    {
      "parameters": {
        "content": "## Trigger Node\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 700,
        "width": 780,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2656,
        32
      ],
      "id": "d3e7fdb6-0c4e-4d8a-92b7-6f33491505af",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Action Node\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 700,
        "width": 780,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1776,
        32
      ],
      "id": "1f299bcc-4b7f-43c3-a5d4-915ae39cf3d4",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -384,
        544
      ],
      "id": "f2b4eb07-b9ce-48a8-9c6a-13c96ae51330",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "content": "## Action Node\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 700,
        "width": 780,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        32
      ],
      "id": "9eebf098-203c-4f0b-ac71-8b5b45ac88a2",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        592,
        128
      ],
      "id": "a30c7e72-a2e4-41c1-9d8f-d41cd5736c1f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1.1,
      "position": [
        592,
        320
      ],
      "id": "ce3e2f6f-2736-4590-b30d-d41fc7092b4d",
      "name": "Sentiment Analysis"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        592,
        528
      ],
      "id": "24cb7fd6-ecc9-4c04-bd93-eb4cfdd6fba1",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        992,
        128
      ],
      "id": "2ac05e56-9bb7-4c7c-b8a4-4e79f84364d8",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "typeVersion": 1.6,
      "position": [
        992,
        320
      ],
      "id": "9da6bc6e-5dc0-4881-8ff3-61ed660431b9",
      "name": "Question and Answer Chain"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsHuggingFaceInference",
      "typeVersion": 1,
      "position": [
        1040,
        528
      ],
      "id": "50c9e9b2-fffb-43cb-9f3c-ba2a5b47a351",
      "name": "Embeddings HuggingFace Inference"
    },
    {
      "parameters": {
        "content": "## Action Node\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 700,
        "width": 780,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        528,
        0
      ],
      "id": "3d5c90b9-d028-4cda-a1bb-b623679f7723",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Code Node\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 720,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "64a595b6-e3c0-4933-acc4-5b8e04e63123",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# 📘 Understanding Nodes in n8n\n\nThis workflow is a **guided playground** to understand the different types of nodes available in n8n.  \nIt demonstrates how **Triggers**, **Actions**, **Logic/Control**, **Integrations**, and **AI-powered nodes** can work together inside one canvas.\n\n---\n\n## 🏗 Workflow Structure\n\n1. **Trigger Nodes** (how workflows start)\n   - **Manual Trigger** → For quick testing inside the editor.  \n   - **Schedule Trigger** → Runs workflows on defined intervals.  \n   - **Webhook Trigger** → Starts a workflow when external systems send data.  \n   - **Form Trigger** → Collects user inputs via a form.  \n   - **Telegram Trigger / Gmail Trigger / Airtable Trigger** → Connects external services as event-based triggers.  \n   - **Execute Workflow Trigger** → Lets another workflow call this one.  \n   - **Chat Trigger (LangChain)** → Starts a workflow when a chat message is received.\n\n2. **Action Nodes** (do something with data)\n   - **Send Gmail Message / Get Gmail Message / Add Gmail Label** → Manage Gmail communications.  \n   - **Google Sheets (Create / Update / Search)** → Store and process structured data.  \n   - **Notion (Upsert / Delete / Get Blocks)** → Manage Notion workspace data.  \n   - **HTTP Request** → Connect to any API not natively supported.  \n   - **Telegram (send)** → Communicate with Telegram users.  \n   - **Airtable** → Manage Airtable records.\n\n3. **Logic & Data Processing Nodes**\n   - **If / Switch / Filter** → Add conditional logic.  \n   - **Merge / Split In Batches / Split Out** → Handle batch processing and dataset merging.  \n   - **Aggregate** → Summarize or combine fields (sums, averages, counts).  \n   - **Set Fields** → Define or overwrite specific fields in an item.  \n   - **Date & Time** → Format and manipulate date/time values.  \n   - **Code** → Write custom JavaScript for advanced data processing.\n\n4. **AI / LangChain Nodes**\n   - **AI Agent** → An intelligent decision-maker that chooses the right tool.  \n   - **Sentiment Analysis / Text Classifier** → NLP-based classification of text.  \n   - **Basic LLM Chain** → Run LLMs with a structured prompt → response chain.  \n   - **Question & Answer Chain** → Retrieve context and answer user queries.  \n   - **Embeddings (HuggingFace)** → Convert text to vector embeddings for semantic search.  \n\n---\n\n## 🔑 Learning Purpose\n\n- **Triggers** show how workflows start automatically or manually.  \n- **Actions** show how you can send/receive data with services like Gmail, Google Sheets, Notion, Airtable.  \n- **Logic Nodes** explain how to branch and manipulate data inside workflows.  \n- **AI Nodes** highlight n8n’s growing integration with LLMs and LangChain—making workflows “intelligent.”  \n\nThis workflow isn’t built to solve one business case—it’s a **reference canvas** that helps you explore what each node type does and how you can combine them.\n\n---\n\n## 🛠 Practical Tips\n\n- Start with **Manual Trigger** while testing.  \n- Use **Set / Date & Time / Filter** nodes often for data preparation.  \n- Keep external connections (like Gmail, Telegram, Notion) authenticated in **Credentials**.  \n- When testing **Webhook Trigger**, make sure to use **Test URL** first.  \n- For **AI Nodes**, always add context in the system prompt and limit output to keep executions predictable.  \n- Sticky Notes are included in the canvas so you can annotate each category of node.\n\n---\n\n## 🎯 Best Practices\n\n- **Name nodes clearly** (verb + object → e.g., `Send Gmail`, `Search Sheet`, `Check Condition`).  \n- **Group nodes visually** by category (Triggers, Actions, Logic).  \n- **Use Sticky Notes** to explain data flow, so collaborators understand at a glance.  \n- **Export** this workflow JSON to reuse it as a **learning template** for onboarding new team members.  \n\n---\n\n### 🔗 Connect with Me\n\nCurious how to build AI systems that can improve themselves?\n\n📺 **YouTube** → [@tech.mayankagg](https://www.youtube.com/@tech.mayankagg)  \n💼 **LinkedIn** → [Mayank Agarwal](https://www.linkedin.com/in/mayank953/)  \n📸 **Instagram** → [@tech.mayankagg](https://www.instagram.com/tech.mayankagg/)\n\n---\n\n*Shared by Mayank Agarwal – Building self-aware automation with n8n + AI.*\n",
        "height": 2080,
        "width": 3440,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2336,
        -2512
      ],
      "typeVersion": 1,
      "id": "efa6723a-411b-458c-aef0-546d505f67e7",
      "name": "Sticky Note5"
    }
  ],
  "connections": {},
  "pinData": {},
  "meta": {
    "instanceId": "9ff4b997319de8b36f3ec9da7971f29ebdff0b93b4afaf4fcaed05164719d3b2"
  }
}